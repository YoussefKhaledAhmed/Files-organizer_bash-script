#! /usr/bin/bash -i

######################################################
# Name: Youssef Khaled Ahmed Zayed
# Batch: 5_Hazem Khaled
# Group: 1
# file name: TASK1_main
# file description: this file tests the functionality
#                   of oranizing file system.
# Date: 7/3/2024
######################################################



# reading the current directory path
current_directory=$(readlink -f .)

# replacing ' ' with "\ " to be able to source the file
# ex.: ./Embedded Linux/... ---> ./Embedded\ Linux/...
fileOrganizationFuncsPath="${current_directory/\/\ /"\ "}/file_organization"

# sourcing the file that holds the file organization functions.
source "${fileOrganizationFuncsPath}"


# global variable to hold the source directory path.
declare SourceDir

# global variable to hold the download directory path.
declare DownloadDir


# name: filesCreation
# description: this function can be used to create 
#              the following directories:
#               Downloads/
#               |-- txt/
#               |   |-- file1.txt
#               |-- jpg/
#               |   |-- file2.jpg
#               |-- pdf/
#               |   |-- file3.pdf
#               |-- misc/
#               |   |-- file4.csv
#               |   |-- file5
# and 
#               Source/
#               |-- file1.txt
#               |-- file2.jpg
#               |-- file3.pdf
#               |-- file4.csv
#               |-- file5
#      
# args: none
# return: none
function filesCreation(){

# 1. ./Download/
    # checks if Downloads directory exists or not
    if ! test -d "${DownloadDir}";then
        # if Downloads/ doesn't exist then make one
        mkdir "${DownloadDir}" "${DownloadDir}/txt" "${DownloadDir}/jpg" "${DownloadDir}/pdf" "${DownloadDir}/misc"
    fi

# 2. ./Source/
    # checks if Source directory exists or not
    if ! test -d "${SourceDir}";then
        # if Source/ doesn't exist then make one.
        mkdir "${SourceDir}"
    fi
# 3. ./Source/file1.txt 
    # checks if ./Source/file1.txt file exists or not
    if ! test -e "${SourceDir}/file1.txt";then
        # if not then make one.
        touch "${SourceDir}/file1.txt"
    fi

# 4. ./Source/file2.jpg
    # checks if ./Source/file2.jpg file exists or not
    if ! test -e "${SourceDir}/file2.jpg";then
        # if not then make one
        touch "${SourceDir}/file2.jpg"
    fi

# 5. ./Source/file3.pdf
    # checks if ./Source/file3.pdf file exists or not
    if ! test -e "${SourceDir}/file3.pdf";then
        # if not then make one
        touch "${SourceDir}/file3.pdf"
    fi

# 6. ./Source/file4.csv
    # checks if ./Source/file4.csv file exists or not
    if ! test -e "${SourceDir}/file4.csv";then
        # if not then make one
        touch "${SourceDir}/file4.csv"
    fi

# 7. ./Source/file5
    # checks if ./Source/file5 file exists or not
    if ! test -e "${SourceDir}/file5";then
        # if not then make one
        touch "${SourceDir}/file5"
    fi
}


# name: TASK1_test
# description: this function tests the other functions
# args: none
# return: none
function TASK1_test(){

    # printing a descriptive sentence to the user.
    echo "this is a function to test task1:"

    # selecting one of 2 inputs 
    select userInput in run ignore
    do
        # if the selected is "ignore"
        if [ ${userInput} = "ignore" ];then
            # break this loop
            break
        # if the selected is "run"
        elif [ ${userInput} = "run" ];then
           
            # call fileOrganizer to organize the files 
            # in the appropriate directories.
            fileOrganizer "${SourceDir}" "${DownloadDir}"
            
            # break as we want to run these instructions once
            # (i.e., if the selected is run then run once)
            break
        fi
    done 
}

# read the source directory from the user.
read -rp "please enter the source directory:" SourceDir

# read the destination directory from the user.
read -rp "please enter the Download directory:" DownloadDir


# checks if Source directory exists or not
if [ -d "${SourceDir}" ];then
    # remove ./Source/ directory and its contents.
    rm -r "${SourceDir}"
fi

# checks if Downloads directory exists or not
if [ -d "${DownloadDir}" ];then
    # remove ./Downloads/ directory and its contents.
    rm -r "${DownloadDir}"
fi


# calling filesCreation function to create the desired files
filesCreation 

# calling TASK1_test function to test this task
TASK1_test 